// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from libdc.djinni

#pragma once

#include "ProxyServer.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeProxyServer final {
public:
    using CppType = ::libdc::ProxyServer;
    using JniType = jobject;

    using Boxed = NativeProxyServer;

    ~NativeProxyServer();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeProxyServer();
    friend ::djinni::JniClass<NativeProxyServer>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/cdnbye/libdc/ProxyServer") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lcom/cdnbye/libdc/ProxyServerType;Ljava/lang/String;SLjava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_mType { ::djinni::jniGetFieldID(clazz.get(), "mType", "Lcom/cdnbye/libdc/ProxyServerType;") };
    const jfieldID field_mHostname { ::djinni::jniGetFieldID(clazz.get(), "mHostname", "Ljava/lang/String;") };
    const jfieldID field_mPort { ::djinni::jniGetFieldID(clazz.get(), "mPort", "S") };
    const jfieldID field_mUsername { ::djinni::jniGetFieldID(clazz.get(), "mUsername", "Ljava/lang/String;") };
    const jfieldID field_mPassword { ::djinni::jniGetFieldID(clazz.get(), "mPassword", "Ljava/lang/String;") };
};

} // namespace djinni_generated
