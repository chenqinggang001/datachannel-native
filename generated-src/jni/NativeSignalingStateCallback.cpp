// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libdc.djinni

#include "NativeSignalingStateCallback.hpp"  // my header
#include "NativeSignalingState.hpp"

namespace djinni_generated {

NativeSignalingStateCallback::NativeSignalingStateCallback() : ::djinni::JniInterface<::libdc::SignalingStateCallback, NativeSignalingStateCallback>() {}

NativeSignalingStateCallback::~NativeSignalingStateCallback() = default;

NativeSignalingStateCallback::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeSignalingStateCallback::JavaProxy::~JavaProxy() = default;

void NativeSignalingStateCallback::JavaProxy::onStateChanged(::libdc::SignalingState c_state) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeSignalingStateCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onStateChanged,
                           ::djinni::get(::djinni_generated::NativeSignalingState::fromCpp(jniEnv, c_state)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
