// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from libdc.djinni

#include "NativeConfiguration.hpp"  // my header
#include "Marshal.hpp"
#include "NativeCertificateType.hpp"
#include "NativeIceServer.hpp"
#include "NativeProxyServer.hpp"
#include "NativeTransportPolicy.hpp"

namespace djinni_generated {

NativeConfiguration::NativeConfiguration() = default;

NativeConfiguration::~NativeConfiguration() = default;

auto NativeConfiguration::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<NativeConfiguration>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::List<::djinni_generated::NativeIceServer>::fromCpp(jniEnv, c.iceServers)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni_generated::NativeProxyServer>::fromCpp(jniEnv, c.proxyServer)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::String>::fromCpp(jniEnv, c.bindAddress)),
                                                           ::djinni::get(::djinni_generated::NativeCertificateType::fromCpp(jniEnv, c.certificateType)),
                                                           ::djinni::get(::djinni_generated::NativeTransportPolicy::fromCpp(jniEnv, c.iceTransportPolicy)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.enableIceTcp)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.enableIceUdpMux)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.disableAutoNegotiation)),
                                                           ::djinni::get(::djinni::Bool::fromCpp(jniEnv, c.forceMediaTransport)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.portRangeBegin)),
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.portRangeEnd)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::I32>::fromCpp(jniEnv, c.mtu)),
                                                           ::djinni::get(::djinni::Optional<std::optional, ::djinni::I32>::fromCpp(jniEnv, c.maxMessageSize)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto NativeConfiguration::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 14);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<NativeConfiguration>::get();
    return {::djinni::List<::djinni_generated::NativeIceServer>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mIceServers)),
            ::djinni::Optional<std::optional, ::djinni_generated::NativeProxyServer>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mProxyServer)),
            ::djinni::Optional<std::optional, ::djinni::String>::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_mBindAddress)),
            ::djinni_generated::NativeCertificateType::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mCertificateType)),
            ::djinni_generated::NativeTransportPolicy::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mIceTransportPolicy)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mEnableIceTcp)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mEnableIceUdpMux)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mDisableAutoNegotiation)),
            ::djinni::Bool::toCpp(jniEnv, jniEnv->GetBooleanField(j, data.field_mForceMediaTransport)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPortRangeBegin)),
            ::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_mPortRangeEnd)),
            ::djinni::Optional<std::optional, ::djinni::I32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mMtu)),
            ::djinni::Optional<std::optional, ::djinni::I32>::toCpp(jniEnv, jniEnv->GetObjectField(j, data.field_mMaxMessageSize))};
}

} // namespace djinni_generated
