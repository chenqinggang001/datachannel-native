// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from libdc.djinni

#pragma once

#include "Configuration.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeConfiguration final {
public:
    using CppType = ::libdc::Configuration;
    using JniType = jobject;

    using Boxed = NativeConfiguration;

    ~NativeConfiguration();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativeConfiguration();
    friend ::djinni::JniClass<NativeConfiguration>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/cdnbye/libdc/Configuration") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/util/ArrayList;Lcom/cdnbye/libdc/ProxyServer;Ljava/lang/String;Lcom/cdnbye/libdc/CertificateType;Lcom/cdnbye/libdc/TransportPolicy;ZZZZIILjava/lang/Integer;Ljava/lang/Integer;)V") };
    const jfieldID field_mIceServers { ::djinni::jniGetFieldID(clazz.get(), "mIceServers", "Ljava/util/ArrayList;") };
    const jfieldID field_mProxyServer { ::djinni::jniGetFieldID(clazz.get(), "mProxyServer", "Lcom/cdnbye/libdc/ProxyServer;") };
    const jfieldID field_mBindAddress { ::djinni::jniGetFieldID(clazz.get(), "mBindAddress", "Ljava/lang/String;") };
    const jfieldID field_mCertificateType { ::djinni::jniGetFieldID(clazz.get(), "mCertificateType", "Lcom/cdnbye/libdc/CertificateType;") };
    const jfieldID field_mIceTransportPolicy { ::djinni::jniGetFieldID(clazz.get(), "mIceTransportPolicy", "Lcom/cdnbye/libdc/TransportPolicy;") };
    const jfieldID field_mEnableIceTcp { ::djinni::jniGetFieldID(clazz.get(), "mEnableIceTcp", "Z") };
    const jfieldID field_mEnableIceUdpMux { ::djinni::jniGetFieldID(clazz.get(), "mEnableIceUdpMux", "Z") };
    const jfieldID field_mDisableAutoNegotiation { ::djinni::jniGetFieldID(clazz.get(), "mDisableAutoNegotiation", "Z") };
    const jfieldID field_mForceMediaTransport { ::djinni::jniGetFieldID(clazz.get(), "mForceMediaTransport", "Z") };
    const jfieldID field_mPortRangeBegin { ::djinni::jniGetFieldID(clazz.get(), "mPortRangeBegin", "I") };
    const jfieldID field_mPortRangeEnd { ::djinni::jniGetFieldID(clazz.get(), "mPortRangeEnd", "I") };
    const jfieldID field_mMtu { ::djinni::jniGetFieldID(clazz.get(), "mMtu", "Ljava/lang/Integer;") };
    const jfieldID field_mMaxMessageSize { ::djinni::jniGetFieldID(clazz.get(), "mMaxMessageSize", "Ljava/lang/Integer;") };
};

} // namespace djinni_generated
