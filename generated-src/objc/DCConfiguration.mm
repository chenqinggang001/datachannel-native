// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from libdc.djinni

#import "DCConfiguration.h"


@implementation DCConfiguration

- (nonnull instancetype)initWithIceServers:(nonnull NSArray<DCIceServer *> *)iceServers
                               proxyServer:(nullable DCProxyServer *)proxyServer
                               bindAddress:(nullable NSString *)bindAddress
                           certificateType:(DCCertificateType)certificateType
                        iceTransportPolicy:(DCTransportPolicy)iceTransportPolicy
                              enableIceTcp:(BOOL)enableIceTcp
                           enableIceUdpMux:(BOOL)enableIceUdpMux
                    disableAutoNegotiation:(BOOL)disableAutoNegotiation
                       forceMediaTransport:(BOOL)forceMediaTransport
                            portRangeBegin:(int32_t)portRangeBegin
                              portRangeEnd:(int32_t)portRangeEnd
                                       mtu:(nullable NSNumber *)mtu
                            maxMessageSize:(nullable NSNumber *)maxMessageSize
{
    if (self = [super init]) {
        _iceServers = [iceServers copy];
        _proxyServer = proxyServer;
        _bindAddress = [bindAddress copy];
        _certificateType = certificateType;
        _iceTransportPolicy = iceTransportPolicy;
        _enableIceTcp = enableIceTcp;
        _enableIceUdpMux = enableIceUdpMux;
        _disableAutoNegotiation = disableAutoNegotiation;
        _forceMediaTransport = forceMediaTransport;
        _portRangeBegin = portRangeBegin;
        _portRangeEnd = portRangeEnd;
        _mtu = mtu;
        _maxMessageSize = maxMessageSize;
    }
    return self;
}

+ (nonnull instancetype)ConfigurationWithIceServers:(nonnull NSArray<DCIceServer *> *)iceServers
                                        proxyServer:(nullable DCProxyServer *)proxyServer
                                        bindAddress:(nullable NSString *)bindAddress
                                    certificateType:(DCCertificateType)certificateType
                                 iceTransportPolicy:(DCTransportPolicy)iceTransportPolicy
                                       enableIceTcp:(BOOL)enableIceTcp
                                    enableIceUdpMux:(BOOL)enableIceUdpMux
                             disableAutoNegotiation:(BOOL)disableAutoNegotiation
                                forceMediaTransport:(BOOL)forceMediaTransport
                                     portRangeBegin:(int32_t)portRangeBegin
                                       portRangeEnd:(int32_t)portRangeEnd
                                                mtu:(nullable NSNumber *)mtu
                                     maxMessageSize:(nullable NSNumber *)maxMessageSize
{
    return [(DCConfiguration*)[self alloc] initWithIceServers:iceServers
                                                  proxyServer:proxyServer
                                                  bindAddress:bindAddress
                                              certificateType:certificateType
                                           iceTransportPolicy:iceTransportPolicy
                                                 enableIceTcp:enableIceTcp
                                              enableIceUdpMux:enableIceUdpMux
                                       disableAutoNegotiation:disableAutoNegotiation
                                          forceMediaTransport:forceMediaTransport
                                               portRangeBegin:portRangeBegin
                                                 portRangeEnd:portRangeEnd
                                                          mtu:mtu
                                               maxMessageSize:maxMessageSize];
}

- (NSString *)description
{
    return [NSString stringWithFormat:@"<%@ %p iceServers:%@ proxyServer:%@ bindAddress:%@ certificateType:%@ iceTransportPolicy:%@ enableIceTcp:%@ enableIceUdpMux:%@ disableAutoNegotiation:%@ forceMediaTransport:%@ portRangeBegin:%@ portRangeEnd:%@ mtu:%@ maxMessageSize:%@>", self.class, (void *)self, self.iceServers, self.proxyServer, self.bindAddress, @(self.certificateType), @(self.iceTransportPolicy), @(self.enableIceTcp), @(self.enableIceUdpMux), @(self.disableAutoNegotiation), @(self.forceMediaTransport), @(self.portRangeBegin), @(self.portRangeEnd), self.mtu, self.maxMessageSize];
}

@end
